#ifndef CONNECTION_CONSTANTS_H
#define CONNECTION_CONSTANTS_H

#include "types.h"
#include "macros.h"

MAKE_ENUM(u8, Area) {
    AREA_BRINSTAR,
    AREA_KRAID,
    AREA_NORFAIR,
    AREA_RIDLEY,
    AREA_TOURIAN,
    AREA_CRATERIA,
    AREA_CHOZODIA,

    AREA_NORMAL_COUNT,

    AREA_TEST = AREA_NORMAL_COUNT,
    AREA_TEST_1,
    AREA_TEST_2,
    AREA_TEST_3,

    AREA_COUNT,
};

#ifdef DEBUG
#define AREA_ENTRY_COUNT AREA_COUNT
#else // !DEBUG
#define AREA_ENTRY_COUNT AREA_NORMAL_COUNT
#endif // DEBUG

#define AREA_NONE UCHAR_MAX

MAKE_ENUM(u8, DoorType) {
    DOOR_TYPE_NONE,
    DOOR_TYPE_AREA_CONNECTION,
    DOOR_TYPE_NO_HATCH,
    DOOR_TYPE_OPEN_HATCH,
    DOOR_TYPE_CLOSED_HATCH,
    DOOR_TYPE_REMOVE_MOTHER_SHIP,
    DOOR_TYPE_SET_MOTHER_SHIP,

    DOOR_TYPE_NO_FLAGS = (1 << 4) - 1,

    DOOR_TYPE_EXISTS = 1 << 4,
    DOOR_TYPE_LOAD_EVENT_BASED_ROOM = 1 << 5,
    DOOR_TYPE_DISPLAYS_ROOM_LOCATION = 1 << 6
};

MAKE_ENUM(u8, HatchType) {
    HATCH_NONE,
    HATCH_UNUSED,
    HATCH_NORMAL,
    HATCH_MISSILE,
    HATCH_SUPER_MISSILE,
    HATCH_POWER_BOMB,
    HATCH_LOCKED,
    HATCH_LOCKED_NAVIGATION,

    HATCH_COUNT
};

MAKE_ENUM(u8, HatchState) {
    HATCH_STATE_CLOSED,
    HATCH_STATE_OPENING,
    HATCH_STATE_OPENED,
    HATCH_STATE_CLOSING,
};

MAKE_ENUM(u16, HatchLockState) {
    HATCH_LOCK_STATE_UNLOCKED,
    HATCH_LOCK_STATE_LOCKED,
    HATCH_LOCK_STATE_PERMA_LOCKED,
};

MAKE_ENUM(u8, HatchAction) {
    HATCH_ACTION_CHECKING_OPENED,
    HATCH_ACTION_SETTING_SOURCE_AND_DESTINATION,
    HATCH_ACTION_SETTING_SOURCE
};

enum HatchOpeningAction {
    HATCH_OPENING_ACTION_NOT_OPENING,
    HATCH_OPENING_ACTION_OPENING,
    HATCH_OPENING_ACTION_LOCKED
};

MAKE_ENUM(u8, HatchLockEventType) {
    HATCH_LOCK_EVENT_TYPE_AFTER,
    HATCH_LOCK_EVENT_TYPE_BEFORE,
    HATCH_LOCK_EVENT_TYPE_AFTER_UNLOCKEABLE,
    HATCH_LOCK_EVENT_TYPE_BEFORE_UNLOCKEABLE,
};

MAKE_ENUM(u8, ElevatorRoute) {
    ELEVATOR_ROUTE_NONE,
    ELEVATOR_ROUTE_CRATERIA_TO_BRINSTAR,
    ELEVATOR_ROUTE_BRINSTAR_TO_NORFAIR,
    ELEVATOR_ROUTE_BRINSTAR_TO_KRAID,
    ELEVATOR_ROUTE_NORFAIR_TO_RIDLEY,
    ELEVATOR_ROUTE_BRINSTAR_TO_TOURIAN,
    ELEVATOR_ROUTE_CRATERIA_TO_TOURIAN,
    ELEVATOR_ROUTE_CRATERIA_TO_NORFAIR,
    ELEVATOR_ROUTE_CRATERIA_TO_TOURIAN_2,
#ifdef RANDOMIZER
    ELEVATOR_ROUTE_CRATERIA_TO_CHOZODIA,
#endif // RANDOMIZER

    ELEVATOR_ROUTE_COUNT
};

MAKE_ENUM(s8, ElevatorDirection) {
    ELEVATOR_DIRECTION_DOWN = 1,
    ELEVATOR_DIRECTION_UP = -1
};

#define HATCH_VERTICAL_SIZE 4

#endif /* CONNECTION_CONSTANTS_H */
